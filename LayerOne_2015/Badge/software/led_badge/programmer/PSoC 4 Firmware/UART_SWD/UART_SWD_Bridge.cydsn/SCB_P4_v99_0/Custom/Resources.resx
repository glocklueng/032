<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BuiltInTabDisplayName" xml:space="preserve">
    <value>Built-in</value>
  </data>
  <data name="ActualBitRateDisplayFormat" xml:space="preserve">
    <value>Actual bit rate (kbps): {0}</value>
  </data>
  <data name="ClockDisplayUnknown" xml:space="preserve">
    <value>UNKNOWN</value>
  </data>
  <data name="ErrorMsgMedDisMiso" xml:space="preserve">
    <value>Oversampling factor must be between 3 and 16 when median filter is disabled and late MISO sample is enabled.</value>
  </data>
  <data name="ErrorMsgMedDisMisoDis" xml:space="preserve">
    <value>Oversampling factor must be between 6 and 16 when median filter and late MISO sample are disabled.</value>
  </data>
  <data name="ErrorMsgMedMiso" xml:space="preserve">
    <value>Oversampling factor must be between 4 and 16 when median filter and late MISO sample are enabled.</value>
  </data>
  <data name="ErrorMsgMedMisoDis" xml:space="preserve">
    <value>Oversampling factor must be between 8 and 16 when median filter is enabled and late MISO sample is disabled.</value>
  </data>
  <data name="ErrorValueLimit" xml:space="preserve">
    <value>Value must be between {0} and {1}.</value>
  </data>
  <data name="ErrorValueLimitBufferSize" xml:space="preserve">
    <value>Value must be between {0} and maximum available memory in device.</value>
  </data>
  <data name="GeneralTabDisplayName" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="HclkError" xml:space="preserve">
    <value>HF_CLK is undefined or has been changed. Please, open {0} configuration dialog to update Data Rate.</value>
  </data>
  <data name="I2CTabDisplayName" xml:space="preserve">
    <value>I2C</value>
  </data>
  <data name="SPIAdvancedTabDisplayName" xml:space="preserve">
    <value>SPI Advanced</value>
  </data>
  <data name="SPIBasicTabDisplayName" xml:space="preserve">
    <value>SPI Basic</value>
  </data>
  <data name="UARTConfigTabDisplayName" xml:space="preserve">
    <value>UART Basic</value>
  </data>
  <data name="BaudRateValueError" xml:space="preserve">
    <value>Baud rate must be between {0} and {1} kbps.</value>
  </data>
  <data name="HclkError1" xml:space="preserve">
    <value>HF_CLK is undefined or has been changed. Please, open {0} configuration dialog to update Data Rate.</value>
  </data>
  <data name="I2CNotContainSlave" xml:space="preserve">
    <value>The I2C FF instance '{0}' is not configured as Slave or Multi-Master-Slave, but has been chosen as the bootloader IO component.</value>
  </data>
  <data name="OvsFactorFilterDisabledError" xml:space="preserve">
    <value>Oversampling factor must be between {0} and {1} when median filter is disabled.</value>
  </data>
  <data name="OvsFactorFilterEnabledError" xml:space="preserve">
    <value>Oversampling factor must be between {0} and {1} when median filter is enabled.</value>
  </data>
  <data name="OvsHighFilterDisabledError" xml:space="preserve">
    <value>Oversampling factor high must be at least {0} when median filter is disabled.</value>
  </data>
  <data name="OvsHighFilterEnabledError" xml:space="preserve">
    <value>Oversampling factor high must be at least {0} when median filter is enabled.</value>
  </data>
  <data name="OvsHighOutOfRangeError" xml:space="preserve">
    <value>Oversampling factor high must be equal to Oversamplig factor - Oversampling factor low</value>
  </data>
  <data name="OvsLowFilterDisabledError" xml:space="preserve">
    <value>Oversampling factor low must be at least {0} when median filter is disabled.</value>
  </data>
  <data name="OvsLowFilterEnabledError" xml:space="preserve">
    <value>Oversampling factor low must be at least {0} when median filter is enabled.</value>
  </data>
  <data name="OvsLowOutOfRangeError" xml:space="preserve">
    <value>Oversampling factor low must be equal to Oversamplig factor - Oversampling factor high</value>
  </data>
  <data name="I2CSlaveAddressError" xml:space="preserve">
    <value>I2C slave address must be between {0} and {1}. Other addresses are not allowed by the I2C spec.</value>
  </data>
  <data name="I2CSlaveAddressMaskError" xml:space="preserve">
    <value>I2C slave address mask must be between {0} and {1}.</value>
  </data>
  <data name="SlaveAddressMaskOddError" xml:space="preserve">
    <value>The value of slave address mask must be even.</value>
  </data>
  <data name="THiError" xml:space="preserve">
    <value>Calculated THi = {0} ns less than tHigh = {1} ns defined by I2C spec for fSCL = {2} KHz. Please increase oversampling factor high.</value>
  </data>
  <data name="TLoError" xml:space="preserve">
    <value>Calculated TLo = {0} ns less than tLow = {1} ns defined by I2C spec for fSCL = {2} KHz. Please increase oversampling factor low.</value>
  </data>
  <data name="UARTAdvancedTabDisplayName" xml:space="preserve">
    <value>UART Advanced</value>
  </data>
  <data name="UARTOvsFactorError" xml:space="preserve">
    <value>Oversampling factor must be between {0} and {1}.</value>
  </data>
  <data name="UARTRXBufferSizeError" xml:space="preserve">
    <value>UART RX buffer size must be between {0} and maximum memory size in the system.</value>
  </data>
  <data name="UARTTXBufferSizeError" xml:space="preserve">
    <value>UART TX buffer size must be between {0} and maximum memory size in the system.</value>
  </data>
  <data name="DataRateValueError" xml:space="preserve">
    <value>Data rate value must be between {0} and {1} kbps.</value>
  </data>
  <data name="UARTBufferSizeValueFormatError" xml:space="preserve">
    <value>Buffer size value has invalid format.</value>
  </data>
  <data name="SCBTabDisplayName" xml:space="preserve">
    <value>SCB</value>
  </data>
  <data name="ClockValueError" xml:space="preserve">
    <value>Clock value must be between {0} and {1}.</value>
  </data>
  <data name="ActualBaudRateDisplayFormat" xml:space="preserve">
    <value>Actual baud rate (bps): {0}</value>
  </data>
  <data name="BaudRateIrDAValueError" xml:space="preserve">
    <value>The baud rate value must be 115200, 57600, 38400, 19200, 9600, 2400 or 1200 kbps when IrDA mode is selected.</value>
  </data>
  <data name="ActualDataRateDisplayFormat" xml:space="preserve">
    <value>Actual data rate (kbps): {0}</value>
  </data>
  <data name="UARTAddressFormatError" xml:space="preserve">
    <value>The value must be between {0} and {1}.</value>
  </data>
  <data name="BootloaderSupportModeFailError" xml:space="preserve">
    <value>Current SCB mode is not supported by the bootloader.</value>
  </data>
  <data name="UARTDataBitsValueError" xml:space="preserve">
    <value>The selected mode doesn't support {0} value. Please set different data bits value.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Motorola_00" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAbIAAACACAMAAABZaBw8AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMAUExURQAAAAAASAAAdABISABIdEgAAHQAAEgASEgAdHQASHQAdEh0dHRISHRIdHR0SHR0dAAA
        /wBInAB0nAB0v0hInEh0nEh0v3RInEic4HSc4HS//5xIAL90AJxISJxIdL90SJx0nJycdOCcSOCcdOC/
        dP+/dJycv7+//5zgv5zg/7/////gnP//v+D////g4P//4PDw8P///wAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+I
        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
</value>
  </data>
  <data name="SlaveAddressOddError" xml:space="preserve">
    <value>The value of slave address must be even when wakeup from sleep mode is enabled.</value>
  </data>
  <data name="SlaveAddressMaskBitOneError" xml:space="preserve">
    <value>The value of slave address mask bit1 must be one when wakeup from sleep mode is enabled.</value>
  </data>
  <data name="EZI2CSlaveAddressError" xml:space="preserve">
    <value>EZI2C slave address must be between {0} and {1}. Other addresses are not allowed by the EZI2C spec.</value>
  </data>
  <data name="EZI2CSlaveAddressesEqualError" xml:space="preserve">
    <value>Primary slave address and Secondary slave address must not be equal.</value>
  </data>
  <data name="EZI2CTabDisplayName" xml:space="preserve">
    <value>EZI2C</value>
  </data>
  <data name="UARTStopBitsSmartCardError" xml:space="preserve">
    <value>When SmartCard mode is selected, stop bits value should be 2.</value>
  </data>
  <data name="DataRateValueErrorNonClockStretching" xml:space="preserve">
    <value>Data rate value must be between {0} and {1} kbps when clock stretching is disabled.</value>
  </data>
</root>