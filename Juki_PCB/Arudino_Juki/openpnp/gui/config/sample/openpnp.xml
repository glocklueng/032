<?xml version="1.0"?>
<OpenPnP>
	<!--
		Machine:
			Defines the machine to be used by the software.

		Attributes:
			class: required
				The Java class name that should be used to control the machine.

				org.openpnp.machine.reference.ReferenceMachine
					ReferenceMachine is the only implementation for Machine
					currently available. It implements a basic machine and
					is considered the "default" machine for OpenPnP. 

		Elements:
			Configuration: required
				Specifies the configuration of the machine. This makes up the
				bulk of the file. 
	  -->
	<Machine class="org.openpnp.machine.reference.ReferenceMachine">
		<!--
			Configuration: required
				The Configuration element is reused in many places. Here it 
				is used to define the configuration for the machine but many
				sub-elements will use it to configure just that element.

			Attributes:
				None

			Elements:
				Driver: required
				Heads: required
				Cameras: optional
				Feeders: required  
		  -->
		<Configuration>
			<!--
				Driver: required
					The Java class name of the driver that is used to drive 
					the machine. The driver is the part of the system that
					is responsible for sending commands to a motion controller
					to cause the machine to perform operations.

					org.openpnp.machine.reference.driver.GrblDriver
						GrblDriver is a driver implementation that talks to
						the Open Source Grbl motion controller

					org.openpnp.machine.reference.driver.SimulatorDriver
						SimulatorDriver creates a window on screen showing a
						top down 2D simulation of the pick and place machine.
						It is useful mainly for development.
			  -->
			<Driver class="org.openpnp.machine.reference.driver.GrblDriver">
				<!--
					Configuration: required
						Configuration information specific to the Driver. To
						see the specific options for configuring a driver, look
						at the JavaDoc documentation for the driver class you are
						using. 
				  -->
				<Configuration>
					<Port name="/dev/tty.usbserial-A9007LmZ" baud="38400" />
				</Configuration>
			</Driver>

			 <!--
			 	Heads: required
			 		Defines the various heads attached to the machine. Many
			 		machines will only have a single entry here but the software
			 		does have basic support for multiple heads.
			 		
			 	Attributes:
			 		None
			 		
			 	Elements:
			 		Head: required 
			   -->
			 <Heads>
			 	<!--
			 		Head: required
						Defines one head attached to the machine. A head is
						considered to be a moving tool holder that can usually
						perform pick and place operations.
						
					Attributes:
						class: required
							The Java class name of the class that implements the
							logic for the head. 
							
							org.openpnp.machine.reference.ReferenceHead
								Currently the only Head implementation available.
						
						reference: required
							A user defined string that will be used to identify the
							head within the software and throughout the rest of the
							configuration files. It is suggested this is kept short.
			 		 
			 	  -->
			 	<Head reference="H1" class="org.openpnp.machine.reference.ReferenceHead">
			 	</Head>
			 </Heads>
			 
			<!--
				Cameras: optional
					Defines one or more cameras attached to the machine. Cameras
					can be used for aiming, centering and visual inspection of
					pick and place operations.
					
				Attributes:
					None
					
				Elements:
					Camera: required 
			  -->
			<Cameras>
				<!--
					Camera: required
						Defines one camera. OpenPnP supports fixed and mobile cameras.
						A mobile camera is one with a head reference, and is considered
						to be hard mounted to that head in some fashion. A fixed camera
						does not have a head reference and is expected to stay in one place.

						For additional information about configuring cameras, please see:
						http://code.google.com/p/openpnp/wiki/CameraConfiguration
						 
					Attributes:
						name: required
							Every camera must have a name. The name is used to identify the camera
							throughout the software. It is suggest that this be short and descriptive.
							For example, telephoto camera attached to a head might be named "Head Tele"
							
						head: optional
							Specifies the head that the camera is attached to for a mobile camera.
							Fixed cameras should not specify this attribute.
							
						class: required
							The Java class name of the class that implements the functionality for
							the camera.
							
							org.openpnp.machine.reference.camera.LtiCivilCamera
								An implementation of Camera that uses the LTI-CIVIL library
								for video capture. This library works for many cameras on
								Mac, Linux and Windows. This is probably the first one
								you should try when setting up your cameras.
								
							org.openpnp.machine.reference.camera.VfwCamera
								An implementation of Camera that uses Video for Windows
								on Win32 platforms. This is useful for some older cameras
								that might not work with the LTI-CIVIL library.
								
							org.openpnp.machine.reference.camera.SimulatorCamera
								An implementation of Camera that produces images using
								OpenGL in 3D. This class is considered experimental.
								It is most often used in development.
								
						looking: required
							Tells the software which direction the camera is looking. Either
							Down or Up. 
							
					Elements:
						Location: required
						UnitsPerPixel: required
						Configuration: optional
				  -->
				<Camera
					name="Head Tele"
					head="H1"
					class="org.openpnp.machine.reference.camera.LtiCivilCamera"
					looking="Down"
					>
					<!-- 
						Location:
							Specifies the location of the camera with respect to either
							the head it is mounted to, or the machine itself. 
							
							If the Camera is assigned to a Head the Location is the offset
							from the center bottom of the tool holder to the center of the
							focal point of the Camera.
							
							To configure this offset, do the following:
							* Measure the length of a tool and record this length as "toolLength".
							* Place the tool in the tool holder.
							* Touch off the tool to an object that you can use the Camera to focus on and record the 
							position of the Head as "touch".
							* Now move the Camera to the center of the part that you touched off on and move the head until
							the Camera is in perfect focus and record the position of the Head as "focus".
							* To calculate the offset, take touch.X - focus.X for X, touch.Y - focus.Y for Y and
							touch.Z - focus.Z + toolLength for Z.
							
							If the Camera is fixed the Location is the absolute machine coordinates of the
							center of the focal point of the camera.
							
							For additional information about configuring cameras, please see:
							http://code.google.com/p/openpnp/wiki/CameraConfiguration
							
						Attributes:
							units: required
								The physical units the other values are expressed in. Valid
								values are Inches, Feet, Millimeters, Centimeters, Meters.
								
							x: required
								The X axis location of the camera's focal point.
								
							y: required
								The Y axis location of the camera's focal point.
								
							z: required
								The Z axis location of the camera's focal point.
								
							rotation: required
								The rotation of the camera. A camera with a rotation of
								0 will have it's picture appear with Y+ being up, Y- being
								down, X+ being right and X- being left.
								
						Elements:
							None
					  -->
					<Location units="Millimeters" x="0" y="-50" z="0" rotation="0" />
					<!-- 
						UnitsPerPixel: required
							Specifies the number of a given physical unit per pixel of image
							in the camera. This information is used by the software to relate
							the images that come from the camera into real world coordinates and
							distances. It is important that these values be as accurate as possible.
							
							The easiest way to calculate these values is place an accurate millimeter
							ruler in the view of the camera at it's ideal focal point. Adjust the ruler
							until it's first line is lined up with the left edge of the camera's image
							and then measure how many millimeters to the right the right edge of the image
							is. Divide this number by the number of pixels wide the image and you have
							the X value. Do the same except from top to bottom and with the number of pixels
							high for the Y value.
							
							Example:
							You measure the camera's image to be 46mm wide and 37mm high. The camera
							outputs it's image at 640x480. So divide 46/640 to get 0.071875 for
							the x value and divide 37/480 to get 0.07708333 for the y value. 
							
							For additional information about configuring cameras, please see:
							http://code.google.com/p/openpnp/wiki/CameraConfiguration
							
						Attributes:
							units: required
								The physical units the other values are expressed in. Valid
								values are Inches, Feet, Millimeters, Centimeters, Meters.
								
							x: required
								The number of units per pixel in the X axis.
								
							y: required
								The number of units per pixel in the Y axis.
								
						Elements:
							None
					  -->
					<UnitsPerPixel units="Millimeters" x="0.071875" y="0.070833" />
					<!--
						Configuration: optional
							Configuration information specific to the class you are using
							to drive the camera. See the JavaDoc documentation for the class. 
					  -->
					<Configuration deviceId="?" />
				</Camera>
			</Cameras>
			
			<!--
				Feeders: required
					Defines one or more part feeders attached to the system.
					
				Attributes:
					None
					
				Elements:
					Feeder: required
						One or more feeders. 
			  -->
			<Feeders>
				<!--
					Feeder: required
						Defines a single part feeder attached to the system. Each physical feeder should
						have an entry like this. Various different types of feeder classes allow for
						a variety of feed methods.
						
					Attributes:
						reference: required
							A unique string to reference this feeder by. Used within the software to
							identify the feeder and in other configuration files to reference this
							feeder. It is suggested that this value be short and describe the location
							of the feeder. Examples: Left0, Right1, Bottom3, L0, R1, B3.
							
						class: required
							The name of the Java class that implements the feeder. By using different
							classes different feeder behavior can be accessed.
							
							org.openpnp.machine.reference.feeder.ReferenceTapeFeeder
								A tape feeder that uses an extendible pin on the head to advance the
								tape. The pin is used to drag the tape to expose the next part before
								picking the part.
								
							org.openpnp.machine.reference.feeder.ReferenceTrayFeeder
								A simple tray feeder that allows specification of how many parts wide
								and long the tray is, along with the offsets neccesary to reach each
								part. 
								This feeder can also be used with tapes that are fixed in place.
								
					Elements:
						Configuration: optional
							
				  -->
				<Feeder reference="L0" class="org.openpnp.machine.reference.feeder.ReferenceTapeFeeder">
					<!-- 
						Configuration: optional
							Defines specific configuration for the feeder. See the JavaDoc documentation
							of the feeder class for more information.
					  -->
					<Configuration>
						<FeedStartLocation units="Millimeters" x="100" y="150" z="50" />
						<FeedEndLocation units="Millimeters" x="102" y="150" z="50" />
					</Configuration>
				</Feeder>
				<Feeder reference="L1" class="org.openpnp.machine.reference.feeder.ReferenceTrayFeeder">
					<Configuration trayCountX="4" trayCountY="4">
						<Offsets units="Millimeters" x="-3" y="-3" z="0" rotation="0"/>
					</Configuration>
				</Feeder>
			</Feeders>
		</Configuration>
	</Machine>
</OpenPnP>
